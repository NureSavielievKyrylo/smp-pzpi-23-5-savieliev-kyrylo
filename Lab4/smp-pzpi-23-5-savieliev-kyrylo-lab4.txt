МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ

Кафедра Програмної інженерії

Звіт
з лабораторної роботи №4
з дисципліни: «Скриптові мови програмування»
з теми: «Структурування коду, робота з формами, автентифікація та авторизація»

Виконав:

Перевірив:

ст. гр. ПЗПІ-23-5

cт. виклач кафедри ПІ

Cавєльєв К. С.

Сокорчук І. П.

Харків 2025

2
1 ІСТОРІЯ ЗМІН
№ Дата
1 23.05.2025

Версія звіту
0.1

Опис змін та виправлень
Початкова версія

3
2 ЗАВДАННЯ
Використовуючи матеріал попередніх лабораторних робіт, потрібно додати
такий функціонал:
–

Прибрати дублювання шапки і підвалу сайту (якщо воно є)

–

Додати сторінку логіна. Обмежити доступ до сайту не залогіненим
користувачам.

–

Додати сторінку профілю з можливістю завантажити фото

4
3 ОПИС ВИКОНАНОЇ РОБОТИ
Розроблений веб застосунок є доповненням до реалізованого в рамках 3-ї
лабораторної роботи Інтернет-магазину.
Розпочнемо з огляду реалізації авторизації. Для реалізації авторизації було
створено спеціальний сервіс «AuthService», що має методи «login», для входу в
акаунт та «logout» для виходу.
«login» приймає два аргументи: імʼя користувача та пароль. Метод записує
в сесію імʼя користувача та час коли він був авторизований, потім записує
його облікові дані у глобальну змінну «credentials» оголошену у файлі «stores/
credentials.php», наприкінці виконується перенаправлення на головну сторінку:
1
2
3
4
5
6
7
8
9
10
11
12
13
14

public static function login(string $username, string $password):
void
{
$_SESSION['username'] = $username;
$_SESSION['authorized_at'] = time();
global $credentials;
$credentials = [
'username' => $username,
'password' => $password,
];
header("Location: " . "/");
}

Метод «logout» видаляє усі дані записані у сесії користувача та у файлах
«credentials.php» та «profile.php», а потім перенаправляє на головну сторінку.
1
2
3
4
5
6
7
8
9
10
11
12

public static function logout(): void
{
global $credentials;
global $profile;
unset($_SESSION['username']);
unset($_SESSION['authorized_at']);
unset($credentials);
unset($profile);
header("Location: " . "/");
}

5
У логіку маршрутизації, описану в горловному файлі були внесені зміни,
аби не давати можливості не авторизованим користувачам переходити на
сторінки товарів, профілю та корзини, і авторизованим переходити на сторіку
логіну. У випадку неавторизованих користувачів їм буде відображатися, що
відповідна сторінка не знайдена або не існує, авторизованих же користувачів буде
перенаправляти на головну, якщо вони захочуть перейти на сторінку логіну:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

switch ($path) {
case '/':
include 'pages/home.phtml';
break;
case '/products':
redirectToNotFound('pages/products.phtml');
break;
case '/cart':
redirectToNotFound('pages/cart.phtml');
break;
case '/login':
if (!isset($_SESSION['username'])) {
include 'pages/login.phtml';;
} else {
header("Location: " . "/");
}
break;
case '/profile':
redirectToNotFound('pages/profile.phtml');
break;
default:
http_response_code(404);
include 'pages/404.phtml';
break;
}

Реалізація функції «redirectToNotFound»:
1
2
3
4
5
6
7
8
9
10

<?php
function redirectToNotFound(string $path): void
{
if (isset($_SESSION['username'])) {
include $path;
} else {
include 'pages/404.phtml';
}
}

6
Для реалізації завантаження файлів було створено сервіс «UploadService», що
має статичний метод «uploadImage», який відповідає за валідацію та завантаження
зображень:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

public static function uploadImage(): void {
$imageSize = getimagesize($_FILES["avatar"]["tmp_name"]);
if (!$imageSize) {
throw new Exception("Файл не є зображенням");
}
if ($_FILES["avatar"]["size"] > 2 * 1024 * 1024) {
throw new Exception("Файл занадто великий");
}
$targetFile = self::$TARGET_DIR . basename($_FILES["avatar"]
["name"]);
$imageFileType = strtolower(pathinfo($targetFile,
PATHINFO_EXTENSION));
if (!in_array($imageFileType, self::$ALLOWED_EXTENSIONS)) {
throw new Exception("Дозволені лише розширення " . implode(',
', self::$ALLOWED_EXTENSIONS));
}
move_uploaded_file($_FILES["avatar"]["tmp_name"], $targetFile);
global $profile;
$profile['avatar'] = $targetFile;
}

Для обробки логіки оновлення інформації профілю було створено сервіс
«UsersService», що має статмичний метод «updateProfile», що приймає дані
користувача та відповідальний за їх валідацію та запис:
1
2
3
4
5
6
7
8
9
10
11
12
13

<?php
include 'stores/profile.php';
class UsersService
{
public static function updateProfile(array $data): void {
$age = self::calculateAge($data['date_of_birth']);
if (strlen(trim($data['first_name'])) == 0) {
throw new Exception('Поле з імʼям не заповнено');
}
if (strlen(trim($data['last_name'])) == 0) {

7
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

throw new Exception('Поле з прізвищем не заповнено');
}
if (strlen(trim($data['description'])) == 0) {
throw new Exception('Поле з прізвищем не заповнено');
}
if ($age < 16) {
throw new Exception('Користувач занадто юний');
}
global $profile;
$profile = $data;
}
private static function calculateAge(string $date): int {
$birthDate = new DateTime($date);
$today = new DateTime();
return $today->diff($birthDate)->y;
}
}

8
4 ВИСНОВКИ
Під час виконання лабораторної роботи, я навчився структурувати свій код,
працювати з формами в PHP та реалізовувати базову авторизацію

9
ДОДАТОК А
Відеозапис
Відеозапис презентації результатів https://youtu.be/qOeANZgYq_g
Хронологічний опис відеозапису:
00:00 — Представлення
00:34 — Перегляд та опис коду
10:06 — Демонстрація роботи веб застосунку

10
ДОДАТОК Б
Графічні матеріали

Рисунок 2.1 – Головна сторінка (для неавторизованого користувача)

Рисунок 2.2 – Головна сторінка (для авторизованого користувача)

11

Рисунок 2.3 – Сторінка профілю

Рисунок 2.4 – Сторінка логіну

12
ДОДАТОК В
Програмний код
В.1 Зміст файлу «index.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

<?php
require_once 'db/seed.php';
require_once 'db/DbConnection.php';
$path = $_SERVER['PATH_INFO'] ?? '/';
session_start();
seed();
switch ($path) {
case '/':
include 'pages/home.phtml';
break;
case '/products':
include 'pages/products.phtml';
break;
case '/cart':
include 'pages/cart.phtml';;
break;
default:
http_response_code(404);
include 'pages/404.phtml';
break;
}

В.2 Зміст файлу «db/DbConnection.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11

<?php
class DbConnection
{
private static ?DbConnection $instance = null;
private PDO $connection;
private function __construct()
{
$this->connection = new PDO('sqlite:./db/db.sqlite');
$this->connection->setAttribute(PDO::ATTR_ERRMODE,
PDO::ERRMODE_EXCEPTION);;

13
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

}
public static function getInstance(): DbConnection
{
if (self::$instance === null) {
self::$instance = new DbConnection();
}
return self::$instance;
}
public function getConnection(): PDO
{
return $this->connection;
}
}

В.3 Зміст файлу «db/seed.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

<?php
require_once 'db/DbConnection.php';
function seed(): void
{
$connection = DbConnection::getInstance()->getConnection();
$connection->exec("
create table if not exists products (
id integer primary key autoincrement,
name text not null,
price integer not null
)
");
$stmt = $connection->query("select count(*) from products");
$count = (int) $stmt->fetchColumn();
if ($count == 0) {
$connection->exec("
insert into products (name, price) values
('Молоко пастеризоване', 12),
('Хліб чорний', 9),
('Сир білий', 21),
('Сметана 20%', 25),
('Кефір 1%', 19),
('Вода газована', 25),
('Печиво \"Весна\"', 25);
");
}
}

14
В.4 Зміст файлу «templates/404.phtml»
Github репозиторій
1
2
3
4
5

6
7
8
9
10
11
12
13
14
15

16
17
18
19

<!doctype html>
<html lang="§">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Сторінка не знайдена | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>
<body>
<main class="flex flex-col items-center justify-center h-dvh wfull gap-5">
<h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight
lg:text-5xl">404</h1>
<h3 class="scroll-m-20 text-2xl font-semibold trackingtight">Сторінка не знайдена</h3>
<div class="inline-flex gap-4">
<a href="/" class="flex bg-indigo-500 text-white itemscenter justify-center h-9 px-3 min-w-[128px] rounded-lg text-sm
hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ringoffset-2 focus:ring-indigo-500">На головну</a>
</div>
</main>
</body>
</html>

В.5 Зміст файлу «templates/cart.phtml»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11

<?php
require_once "./services/CartService.php";
$cartService = new CartService();
$cartItems = $cartService->getCartItems();
$total = $cartService->calculateTotal();
if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST["id"]))
{
$cartService->removeItem($_POST["id"]);
}

15
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST["resetcart"])) {
$cartService->clearCart();
}
?>
<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport"
content="width=device-width, user-scalable=no, initialscale=1.0, maximum-scale=1.0, minimum-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Корзина | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/
browser@4"></script>
</head>
<body class="flex flex-col w-full h-dvh mt-auto">
<?php include "./templates/navbar.phtml"; ?>
<main class="flex flex-col h-full w-fit mx-auto items-center
justify-center gap-4">
<?php if (empty($cartItems)) : ?>
<a href="/products" class="text-lg font-semibold textindigo-500 underline decoration-2">Перейти до покупок</a>
<?php else : ?>
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight mx-auto">Корзина</h1>
<table class="w-full text-sm text-left rtl:text-right
text-gray-500">
<thead class="text-xs text-gray-700 uppercase bggray-100">
<tr>
<th scope="col" class="px-6 py-3">Назва</th>
<th scope="col" class="px-6 py-3">Ціна</th>
<th scope="col" class="px-6 py-3">Кількість</th>
<th scope="col" class="px-6 py-3">Сума</th>
<th scope="col" class="px-6 py-3">Дії</th>
</tr>
</thead>
<tbody>
<?php foreach ($cartItems as $item) : ?>
<tr class="bg-white border-b border-gray-200">
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap"><?= $item['name'] ?></th>
<th class="px-6 py-4"><?= $item['price'] ?></th>
<th class="px-6 py-4"><?= $item['quantity'] ?></
th>
<th class="px-6 py-4"><?= $item['total'] ?></th>
<th class="px-6 py-4">
<form action="" method="post">
<input type="hidden" name="id" value="<?=
$item['id'] ?>">

16
54

55

56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

73

74
75
76
77
78
79

<button class="flex items-center justifycenter size-9 rounded-lg text-white bg-red-500 hover:bg-red-600
focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ringred-500">
<svg xmlns="http://www.w3.org/2000/svg"
class="size-4" viewBox="0 0 24 24"><path fill="none"
stroke="currentColor" stroke-linecap="round" strokelinejoin="round" stroke-width="2" d="M3 6h18m-2 0v14c0 1-1 2-2
2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2m-6
5v6m4-6v6"/></svg>
</button>
</form>
</th>
</tr>
<?php endforeach; ?>
<tr class="bg-white border-b border-gray-200">
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap">Всього:</th>
<th class="px-6 py-4"></th>
<th class="px-6 py-4"></th>
<th class="px-6 py-4"><?= $total ?></th>
<th class="px-6 py-4"></th>
</tr>
</tbody>
</table>
<form class="w-full text-right space-x-2" action=""
method="post">
<input type="hidden" name="reset-cart">
<button class="bg-red-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-red-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-red-500">Відмінити</
button>
<button class="bg-indigo-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-indigo-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Купити</
button>
</form>
<?php endif; ?>
</main>
<?php include "./templates/footer.phtml"; ?>
</body>
</html>

В.6 Зміст файлу «templates/home.phtml»
Github репозиторій
1
2

<!doctype html>
<html lang="en">

17
3
4
5

6
7
8
9
10
11
12
13
14
15
16
17

<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Головна | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>
<body class="flex flex-col w-full h-dvh mt-auto">
<?php include './templates/navbar.phtml'; ?>
<main class="flex size-full items-center justify-center bgslate-50">
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight">Інтернет-магазин "Весна"</h1>
</main>
<?php include './templates/footer.phtml'; ?>
</body>
</html>

В.7 Зміст файлу «templates/products.phtml»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

19
20
21
22

<?php
require_once './services/ProductsService.php';
require_once './services/CartService.php';
$productsService = new ProductsService();
$cartService = new CartService();
$products = $productsService->getProducts();
if ($_SERVER["REQUEST_METHOD"] == "POST" &&
isset($_POST['quantities'])) {
$cartService->addItem($_POST['quantities']);
}
?>
<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Продукти | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>

18
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

57
58
59
60
61

<body class="flex flex-col w-full h-dvh mt-auto">
<?php include './templates/navbar.phtml'; ?>
<main class="flex flex-col size-full bg-slate-50 items-center
justify-center gap-6">
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight">Продукти</h1>
<form class="flex flex-col items-center justify-center gap-4"
action="" method="post">
<table class="w-full text-sm text-left rtl:text-right textgray-500">
<thead class="text-xs text-gray-700 uppercase bggray-100">
<tr>
<th scope="col" class="px-6 py-3">Назва</th>
<th scope="col" class="px-6 py-3">Кількість</th>
<th scope="col" class="px-6 py-3">Ціна</th>
</tr>
</thead>
<tbody>
<?php foreach ($products as $product) : ?>
<tr class="bg-white border-b border-gray-200">
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap"><?= $product['name'] ?></th>
<th class="px-6 py-4">
<input
name="quantities[<?php echo $product['id']; ?>]"
class="border border-slate-300 w-16 pl-2
focus:border-indigo-500 rounded-md"
type="number"
value="0"
min="0"
max="100"
step="1"
/>
</th>
<th class="px-6 py-4">$<?= $product['price'] ?></th>
</tr>
<?php endforeach; ?>
</tbody>
</table>
<button class="bg-indigo-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-indigo-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mlauto">Підтвердити</button>
</form>
</main>
<?php include './templates/footer.phtml'; ?>
</body>
</html>

19
В.8 Зміст файлу «services/AuthService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

<?php
include 'stores/credentials.php';
include 'stores/profile.php';
class AuthService
{
public static function login(string $username, string
$password): void
{
$_SESSION['username'] = $username;
$_SESSION['authorized_at'] = time();
global $credentials;
$credentials = [
'username' => $username,
'password' => $password,
];
header("Location: " . "/");
}
public static function logout(): void
{
global $credentials;
global $profile;
unset($_SESSION['username']);
unset($_SESSION['authorized_at']);
unset($credentials);
unset($profile);
header("Location: " . "/");
}
}

В.9 Зміст файлу «services/CartService.php»
Github репозиторій
1
2
3
4
5
6
7

<?php
require_once './services/ProductsService.php';
class CartService
{
private ProductsService $productsService;

20
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

public function __construct()
{
$this->productsService = new ProductsService();
}
public function getCartItems(): array {
$products = $this->productsService->getProducts();
$cart = [];
foreach ($products as $product) {
if (isset($_SESSION['cart'][$product['id']])) {
$item = [
'id' => $product['id'],
'name' => $product['name'],
'price' => $product['price'],
'quantity' => $_SESSION['cart'][$product['id']],
'total' => $product['price'] * $_SESSION['cart']
[$product['id']]
];
$cart[] = $item;
}
}
return $cart;
}
public function calculateTotal(): int {
$total = 0;
foreach ($this->getCartItems() as $item) {
$total += $item['total'];
}
return $total;
}
public function addItem(array $quantities): void {
$isEmpty = true;
foreach ($quantities as $id => $quantity) {
$id = (int) $id;
$quantity = max(0, min(100, (int) $quantity));
if ($quantity > 0) {
$_SESSION['cart'][$id] = $quantity;
$isEmpty = false;
}
}
if (!$isEmpty) {
header("Location: " . "/cart");
}
}
public function removeItem(int $id): void {

21
63
64
65
66
67
68
69
70
71

unset($_SESSION['cart'][$id]);
header("Location: " . $_SERVER['REQUEST_URI']);
}
public function clearCart(): void {
unset($_SESSION['cart']);
header("Location: " . "/");
}
}

В.10 Зміст файлу «services/ProductsService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

<?php
require_once 'db/DbConnection.php';
class ProductsService
{
private readonly PDO $connection;
public function __construct()
{
$this->connection = DbConnection::getInstance()>getConnection();
}
public function getProducts(): array {
$stmt = $this->connection->query("select * from products");
return $stmt->fetchAll(PDO::FETCH_ASSOC);
}
}

В.11 Зміст файлу «services/UploadService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11

<?php
require_once 'stores/profile.php';
class UploadService
{
private static array $ALLOWED_EXTENSIONS = ['jpg', 'jpeg',
'png'];
private static string $TARGET_DIR = './assets/';
public static function uploadImage(): void {
$imageSize = getimagesize($_FILES["avatar"]["tmp_name"]);

22
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

if (!$imageSize) {
throw new Exception("Файл не є зображенням");
}
if ($_FILES["avatar"]["size"] > 2 * 1024 * 1024) {
throw new Exception("Файл занадто великий");
}
$targetFile = self::$TARGET_DIR . basename($_FILES["avatar"]
["name"]);
$imageFileType = strtolower(pathinfo($targetFile,
PATHINFO_EXTENSION));
if (!in_array($imageFileType, self::$ALLOWED_EXTENSIONS)) {
throw new Exception("Дозволені лише розширення " .
implode(', ', self::$ALLOWED_EXTENSIONS));
}
move_uploaded_file($_FILES["avatar"]["tmp_name"],
$targetFile);
global $profile;
$profile['avatar'] = $targetFile;
}
}

В.12 Зміст файлу «services/UsersService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

<?php
include 'stores/profile.php';
class UsersService
{
public static function updateProfile(array $data): void {
$age = self::calculateAge($data['date_of_birth']);
if (strlen(trim($data['first_name'])) == 0) {
throw new Exception('Поле з імʼям не заповнено');
}
if (strlen(trim($data['last_name'])) == 0) {
throw new Exception('Поле з прізвищем не заповнено');
}
if (strlen(trim($data['description'])) == 0) {
throw new Exception('Поле з прізвищем не заповнено');
}
if ($age < 16) {

23
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

throw new Exception('Користувач занадто юний');
}
global $profile;
$profile = $data;
}
private static function calculateAge(string $date): int {
$birthDate = new DateTime($date);
$today = new DateTime();
return $today->diff($birthDate)->y;
}
}

В.13 Зміст файлу «stores/credentials.php»
Github репозиторій
1 <?php
2
3 global $credentials;

В.14 Зміст файлу «stores/profile.php»
1 <?php
2
3 global $profile;

В.15 Зміст файлу «templates/auth-required.phtml»
Github репозиторій
1
2
3

4

<h3 class="scroll-m-20 text-2xl font-semibold trackingtight">Спочатку увійдіть в акаунт</h3>
<div class="inline-flex gap-4">
<a href="/login" class="flex bg-indigo-500 text-white itemscenter justify-center h-9 px-3 min-w-[128px] rounded-lg text-sm
hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ringoffset-2 focus:ring-indigo-500">Увійти</a>
</div>

В.16 Зміст файлу «templates/footer.phtml»
Github репозиторій

24
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

<?php
$links = [
"Головна" => "/",
"Продукти" => "/products",
"Корзина" => "/cart",
];
?>
<footer class="inline-flex items-center w-full h-16 bg-white mtauto">
<div class="w-fit mx-auto flex justify-center items-center
divide-x divide-black">
<?php
foreach ($links as $link => $url) {
echo "<a class='px-2' href='$url'>$link</a>";
}
?>
</div>
</footer>

В.17 Зміст файлу «templates/navbar.phtml»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

<?php
$current_url = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
$links = [
"Головна" => "/",
"Продукти" => "/products",
];
?>
<header class="inline-flex w-full h-16 items-center justifybetween bg-white px-5">
<div class="flex items-center gap-5">
<?php
foreach ($links as $name => $link) {
$className = $current_url == $link ? "text-indigo-500" : "";
echo "<a class='$className' href='$link'>$name</a>";
}
?>
</div>
<div class="flex items-center gap-3">
<?php if (isset($_SESSION['username'])) : ?>
<a class="flex items-center justify-center size-10 border
border-slate-300 rounded-lg" href="/cart">
<svg xmlns="http://www.w3.org/2000/svg" class="size-5 textslate-500" viewBox="0 0 24 24"><g fill="none"
stroke="currentColor" stroke-linecap="round" strokelinejoin="round" stroke-width="2"><circle cx="8" cy="21" r="1"/
><circle cx="19" cy="21" r="1"/><path d="M2.05 2.05h2l2.66 12.42a2

25

23
24
25

26
27
28

29
30
31

2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12"/></g></
svg>
</a>
<a class="flex items-center justify-center size-10 border
border-slate-300 rounded-lg" href="/profile">
<svg xmlns="http://www.w3.org/2000/svg" class="size-5 textslate-500" viewBox="0 0 24 24"><g fill="none"
stroke="currentColor" stroke-linecap="round" strokelinejoin="round" stroke-width="2"><circle cx="12" cy="8" r="5"/
><path d="M20 21a8 8 0 0 0-16 0"/></g></svg>
</a>
<?php else : ?>
<a href="/login" class="flex items-center justify-center bgindigo-500 text-white h-9 px-3 min-w-[128px] rounded-lg text-sm
hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ringoffset-2 focus:ring-indigo-500">Увійти в акаунт</a>
<?php endif; ?>
</div>
</header>
