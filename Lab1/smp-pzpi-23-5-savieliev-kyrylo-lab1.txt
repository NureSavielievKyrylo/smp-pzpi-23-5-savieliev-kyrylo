–ú–Ü–ù–Ü–°–¢–ï–†–°–¢–í–û –û–°–í–Ü–¢–ò –Ü –ù–ê–£–ö–ò –£–ö–†–ê–á–ù–ò
–•–ê–†–ö–Ü–í–°–¨–ö–ò–ô –ù–ê–¶–Ü–û–ù–ê–õ–¨–ù–ò–ô –£–ù–Ü–í–ï–†–°–ò–¢–ï–¢ –†–ê–î–Ü–û–ï–õ–ï–ö–¢–†–û–ù–Ü–ö–ò

–ö–∞—Ñ–µ–¥—Ä–∞ –ü—Ä–æ–≥—Ä–∞–º–Ω–æ—ó —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—ó

–ó–≤—ñ—Ç
–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ ‚Ññ1
–∑ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏: ¬´–°–∫—Ä–∏–ø—Ç–æ–≤—ñ –º–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è¬ª
–∑ —Ç–µ–º–∏: ¬´–†–æ–∑—Ä–æ–±–∫–∞ Bash —Å–∫—Ä–∏–ø—Ç—É –¥–ª—è —Ä–æ–∑–∫–ª–∞–¥—É¬ª

–í–∏–∫–æ–Ω–∞–≤:

–ü–µ—Ä–µ–≤—ñ—Ä–∏–≤:

—Å—Ç. –≥—Ä. –ü–ó–ü–Ü-23-5

c—Ç. –≤–∏–∫–ª–∞—á –∫–∞—Ñ–µ–¥—Ä–∏ –ü–Ü

C–∞–≤—î–ª—å—î–≤ –ö. –°.

–°–æ–∫–æ—Ä—á—É–∫ –Ü. –ü.

–•–∞—Ä–∫—ñ–≤ 2025

2
1 –Ü–°–¢–û–†–Ü–Ø –ó–ú–Ü–ù
‚Ññ –î–∞—Ç–∞
1 23.05.2025

–í–µ—Ä—Å—ñ—è –∑–≤—ñ—Ç—É
0.1

–û–ø–∏—Å –∑–º—ñ–Ω —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å
–ü–æ—á–∞—Ç–∫–æ–≤–∞ –≤–µ—Ä—Å—ñ—è

3
2 –ó–ê–í–î–ê–ù–ù–Ø
–†–æ–∑—Ä–æ–±–∏—Ç–∏ Bash-—Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –æ–±—Ä–æ–±–ª—è—î –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —ñ–∑ —Å–∞–π—Ç—É https://cist.nure.
ua —Ä–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å –¥–ª—è –≤—Å—ñ—Ö –≥—Ä—É–ø –ø–æ—Ç–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ CSV —Ç–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ —É —Ñ–æ—Ä–º–∞—Ç
CSV –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ Google –ö–∞–ª–µ–Ω–¥–∞—Ä https://support.google.com.

4
3 –û–ü–ò–° –í–ò–ö–û–ù–ê–ù–û–á –†–û–ë–û–¢–ò
–ù–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –µ—Ç–∞–ø—ñ —Å–∫—Ä–∏–ø—Ç –≤–∏–∑–Ω–∞—á–∞—î —Å–≤–æ—é –≤–µ—Ä—Å—ñ—é —Ç–∞ –¥–µ–∫–ª–∞—Ä—É—î –¥–≤—ñ –¥–æ–ø–æ–º—ñ–∂–Ω—ñ
—Ñ—É–Ω–∫—Ü—ñ—ó: print_help –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ–≤—ñ–¥–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞
print_version –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–µ—Ä—Å—ñ—ó. –¶–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è —É—Ç–∏–ª—ñ—Ç
–∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —à–≤–∏–¥–∫–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—É
—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É.
1 #!/bin/bash
2
3 VERSION="1.0.0"
4
5 print_help() {
6
echo "Usage: $(basename "$0") [--help | --version] | [[-q|-quiet] [academic_group] file_from_cist.csv]"
7
echo ""
8
echo "Options:"
9
echo " --help
Show this help message"
10
echo " --version
Show version information"
11
echo " -q, --quiet
Suppress output to standard output"
12
# ... (—Ä–µ—à—Ç–∞ –¥–æ–≤—ñ–¥–∫–∏)
13 }
14
15 print_version() {
16
echo "v$VERSION"
17 }

–î–∞–ª—ñ —Å–∫—Ä–∏–ø—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∑–º—ñ–Ω–Ω—ñ —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ —Ä–æ–∑–±–æ—Ä—É –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö
–ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–∏–∫–ª while, –≤—ñ–Ω –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ –æ–±—Ä–æ–±–ª—è—î –∫–æ–∂–µ–Ω
–∞—Ä–≥—É–º–µ–Ω—Ç. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è case –¥–æ–∑–≤–æ–ª—è—î —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø—Ä–∞–ø–æ—Ä–∏: ‚Äìhelp —Ç–∞
‚Äìversion –≤–∏–∫–ª–∏–∫–∞—é—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –∑–∞–≤–µ—Ä—à—É—é—Ç—å —Ä–æ–±–æ—Ç—É; -q –∞–±–æ ‚Äìquiet
–≤—Å—Ç–∞–Ω–æ–≤–ª—é—î ¬´—Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º¬ª. –£—Å—ñ —ñ–Ω—à—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –≤–≤–∞–∂–∞—é—Ç—å—Å—è –ø–æ–∑–∏—Ü—ñ–π–Ω–∏–º–∏: –ø–µ—Ä—à–∏–π
–∑ –Ω–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —è–∫ –Ω–∞–∑–≤–∞ –≥—Ä—É–ø–∏ (group_input), –∞ –¥—Ä—É–≥–∏–π ‚Äî —è–∫ —à–ª—è—Ö –¥–æ CSV-—Ñ–∞–π–ª—É
(csv_path). –Ø–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∑–∞–±–∞–≥–∞—Ç–æ, —Å–∫—Ä–∏–ø—Ç –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
—Ç–∞ –¥–æ–≤—ñ–¥–∫—É. –ö–æ–º–∞–Ω–¥–∞ shift –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∑—Å—É–≤–∞—î —Å–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, –¥–æ–∑–≤–æ–ª—è—é—á–∏
–æ–±—Ä–æ–±–∏—Ç–∏ —ó—Ö —É—Å—ñ.
1
2
3
4
5
6
7

quiet=false
csv_path=""
group_input=""
while [[ $# -gt 0 ]]; do
case "$1" in
--help)

5
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

print_help
exit 0
;;
--version)
print_version
exit 0
;;
-q|--quiet)
quiet=true
shift
;;
*)
if [[ -z "$group_input" ]]; then
group_input="$1"
elif [[ -z "$csv_path" ]]; then
csv_path="$1"
else
echo "
Too many args."
print_help
exit 1
fi
shift
;;

‚õî

esac
done

–£ –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É —Ä–æ–∑–∫–ª–∞–¥—É –Ω–µ –±—É–≤ –Ω–∞–¥–∞–Ω–∏–π —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç, —Å–∫—Ä–∏–ø—Ç
–ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —Ä–µ–∂–∏–º. –í—ñ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —à—É–∫–∞—î —É –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
—Ñ–∞–π–ª–∏, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —à–∞–±–ª–æ–Ω—É TimeTable.csv, —ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≤–±—É–¥–æ–≤–∞–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏
select —Å—Ç–≤–æ—Ä—é—î –Ω—É–º–µ—Ä–æ–≤–∞–Ω–µ –º–µ–Ω—é, –∑ —è–∫–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –∑—Ä—É—á–Ω–æ –æ–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π
—Ñ–∞–π–ª.
1
2
3
4
5
6
7
8
9
10

üîç

if [[ -z "$csv_path" ]]; then
PS3="
Available files: "
select csv_path in TimeTable_*.csv; do
if [[ -n "$csv_path" ]]; then
break
else
echo "
Wrong choice, try again."
fi
done
fi

üö´

–ü—ñ—Å–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ–∞–π–ª—É —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏—Å—Ç—É–ø–∞—î –¥–æ –∞–Ω–∞–ª—ñ–∑—É –π–æ–≥–æ –≤–º—ñ—Å—Ç—É –¥–ª—è
—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤—Å—ñ—Ö —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∞–∫–∞–¥–µ–º—ñ—á–Ω–∏—Ö –≥—Ä—É–ø. –¶–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ –ø–æ—Ç—É–∂–Ω–∏–π
–∫–æ–Ω–≤–µ—î—Ä –∫–æ–º–∞–Ω–¥, –¥–µ –∫–æ–∂–Ω–∞ –≤–∏–∫–æ–Ω—É—î —Å–≤–æ—é —á–∞—Å—Ç–∏–Ω—É —Ä–æ–±–æ—Ç–∏: iconv –ø–µ—Ä–µ–∫–æ–¥–æ–≤—É—î —Ñ–∞–π–ª
–∑ windows-1251 –≤ utf-8; sed –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î —Å–∏–º–≤–æ–ª–∏ –Ω–æ–≤–æ–≥–æ —Ä—è–¥–∫–∞ —Ç–∞ –≤–∏–¥–∞–ª—è—î –º–∞—Ä–∫–µ—Ä
BOM (Byte Order Mark); –Ω–∞—Å—Ç—É–ø–Ω–∏–π sed –≤–∏–¥–∞–ª—è—î –ª–∞–ø–∫–∏ –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏; awk

6
–∑ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º-–∫–æ–º–æ—é –≤–∏—Ç—è–≥—É—î –∑ –ø–µ—Ä—à–æ—ó –∫–æ–ª–æ–Ω–∫–∏ –ª–∏—à–µ –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏; sort -u —Å–æ—Ä—Ç—É—î
–æ—Ç—Ä–∏–º–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–∞ –≤–∏–¥–∞–ª—è—î –¥—É–±–ª—ñ–∫–∞—Ç–∏.
1
2
3

available_groups=$(iconv -f windows-1251 -t utf-8 "$csv_path" | \
sed -e 's/\r\n/\n/g' -e 's/\r/\n/g' | sed 's/^\xEF\xBB\xBF//' |
\
sed 's/"//g' | awk -F',' 'NR > 1 { split($1, x, " - "); print
x[1] }' | sort -u)

–ê–Ω–∞–ª–æ–≥—ñ—á–Ω–æ –¥–æ –≤–∏–±–æ—Ä—É —Ñ–∞–π–ª—É, —è–∫—â–æ –Ω–∞–∑–≤–∞ –≥—Ä—É–ø–∏ –Ω–µ –±—É–ª–∞ –≤–≤–µ–¥–µ–Ω–∞, —Å–∫—Ä–∏–ø—Ç
–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∫–æ–º–∞–Ω–¥—É select –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —Å–ø–∏—Å–∫—É –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –≥—Ä—É–ø –¥–ª—è
—ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∏–±–æ—Ä—É.
1
2
3
4
5
6
7
8
9
10
11
12

üë§

if [[ -z "$group_input" ]]; then
PS3="
Select group:"
select selected_group in $available_groups; do
if [[ -n "$selected_group" ]]; then
break
else
echo "
Wrong choice, try again."
fi
done
else
selected_group="$group_input"
fi

üö´

–ü—ñ—Å–ª—è –∑–±–æ—Ä—É –≤—Å—ñ—î—ó –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∫–ª—é—á–æ–≤–∏–π –µ—Ç–∞–ø –æ–±—Ä–æ–±–∫–∏.
–°—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —ñ –≤ –Ω—å–æ–≥–æ –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è —Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞, —â–æ
–≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ–æ—Ä–º–∞—Ç—É Google –ö–∞–ª–µ–Ω–¥–∞—Ä—è.
1
2

result_file="Google_${csv_path}"
echo "\"Subject\",\"Start Date\",\"Start Time\",\"End Date\",\"End
Time\",\"Description\"" > "$result_file"

–û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ —Å–∫–ª–∞–¥–Ω–∏–π –∫–æ–Ω–≤–µ—î—Ä.
–ü–µ—Ä—à–∏–π

awk

—Å–∫—Ä–∏–ø—Ç

—Ñ—ñ–ª—å—Ç—Ä—É—î

—Ä—è–¥–∫–∏

–∑–∞

–æ–±—Ä–∞–Ω–æ—é

–≥—Ä—É–ø–æ—é,

–≥–µ–Ω–µ—Ä—É—î

–∑–∞

–¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó generate_key —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ
–†–†–†–†–ú–ú–î–î–ì–ì–•–• —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø–æ–ª—è, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Å–∏–º–≤–æ–ª–æ–º |. –ü–æ—Ç—ñ–º –∫–æ–º–∞–Ω–¥–∞
sort –≤–ø–æ—Ä—è–¥–∫–æ–≤—É—î —Ü—ñ —Ä—è–¥–∫–∏ –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥—ñ—á–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –§—ñ–Ω–∞–ª—å–Ω–∏–π awk —Å–∫—Ä–∏–ø—Ç
–≤–∏–∫–æ–Ω—É—î –Ω–∞–π—Å–∫–ª–∞–¥–Ω—ñ—à—É —Ä–æ–±–æ—Ç—É: –≤—ñ–Ω —á–∏—Ç–∞—î –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, —Ñ–æ—Ä–º–∞—Ç—É—î –¥–∞—Ç–∏ –π —á–∞—Å –∑–∞
–¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ–π fmt_date —Ç–∞ fmt_time –¥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É (–ú–ú/–î–î/–†–†–†–†
—Ç–∞ 12-–≥–æ–¥–∏–Ω–Ω–∏–π AM/PM). –ù–∞–π–±—ñ–ª—å—à –≤–∏—Ç–æ–Ω—á–µ–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ ‚Äî —Ü–µ –Ω—É–º–µ—Ä–∞—Ü—ñ—è –æ–¥–Ω–∞–∫–æ–≤–∏—Ö

7
—Ç–∏–ø—ñ–≤ –∑–∞–Ω—è—Ç—å –≤–ø—Ä–æ–¥–æ–≤–∂ –¥–Ω—è. –°–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î –∫–æ–º–ø–æ–∑–∏—Ç–Ω–∏–π –∫–ª—é—á ¬´—Ç–∏–ø_–∑–∞–Ω—è—Ç—Ç—è-–¥–∞—Ç–∞¬ª
—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–∞—Å–∏–≤—ñ–≤ seen —Ç–∞ counter —Ä–∞—Ö—É—î, –∫–æ—Ç—Ä–µ —Ü–µ –∑–∞ —Ä–∞—Ö—É–Ω–∫–æ–º –∑–∞–Ω—è—Ç—Ç—è –¥–∞–Ω–æ–≥–æ
—Ç–∏–ø—É –Ω–∞ —Ü—é –¥–∞—Ç—É, –¥–æ–¥–∞—é—á–∏ –¥–æ –Ω–∞–∑–≤–∏ –ø–æ–¥—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –Ω–æ–º–µ—Ä (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, ¬´–õ–µ–∫—Ü—ñ—è;
‚Ññ2¬ª). –ì–æ—Ç–æ–≤–∏–π –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π —Ä—è–¥–æ–∫ –¥–æ–¥–∞—î—Ç—å—Å—è –¥–æ —Ä–µ–∑—É–ª—å—Ç—É—é—á–æ–≥–æ —Ñ–∞–π–ª—É.
1
2
3
4
5
6
7
8

iconv -f windows-1251 -t utf-8 "$csv_path" | \
sed -e 's/\r\n/\n/g' -e 's/\r/\n/g' -e 's/^\xEF\xBB\xBF//' | \
awk -v grp="$selected_group" '
# ... (–ü–µ—Ä—à–∏–π awk —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á–∞
—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è) ...
' | sort -t'|' -k1,1 | \
awk -F'|' '
# ... (–î—Ä—É–≥–∏–π awk —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–∞
–Ω—É–º–µ—Ä–∞—Ü—ñ—ó) ...
}' >> "$result_file"

–ù–∞–ø—Ä–∏–∫—ñ–Ω—Ü—ñ, —è–∫—â–æ –Ω–µ –±—É–ª–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–ø–æ—Ä —Ç–∏—Ö–æ–≥–æ —Ä–µ–∂–∏–º—É, —Å–∫—Ä–∏–ø—Ç
–≤–∏–≤–æ–¥–∏—Ç—å —Ñ—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–∞ —ñ–º‚Äô—è —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É.
1
2
3

‚úÖ

if ! $quiet; then
echo "
Saved to: $result_file"
fi

8
4 –í–ò–°–ù–û–í–ö–ò
–ü—ñ–¥ —á–∞—Å —Ü—ñ—î—ó –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —è –æ–∑–Ω–∞–π–æ–º–∏–≤—Å—è –∑ –æ—Å–Ω–æ–≤–Ω–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ Bash
–¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏ —Ç–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏ —Ç–∞ –Ω–∞–≤—á–∏–≤—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏
select, ls, awk, sort, uniq, tee, cat, sed, iconv —Ç–æ—â–æ

9
–î–û–î–ê–¢–û–ö –ê
–í—ñ–¥–µ–æ–∑–∞–ø–∏—Å
–í—ñ–¥–µ–æ–∑–∞–ø–∏—Å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ https://youtu.be/nFiuEc0ighk
–•—Ä–æ–Ω–æ–ª–æ–≥—ñ—á–Ω–∏–π –æ–ø–∏—Å –≤—ñ–¥–µ–æ–∑–∞–ø–∏—Å—É:
00:00 ‚Äî –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è
00:50 ‚Äî –†–æ–∑–±—ñ—Ä –∫–æ–¥—É
09:05 ‚Äî –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞

10
–î–û–î–ê–¢–û–ö –ë
–ü—Ä–æ–≥—Ä–∞–º–Ω–∏–π –∫–æ–¥
–ë.1 –ó–º—ñ—Å—Ç —Ñ–∞–π–ª—É ¬´index.php¬ª
Github —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
1 #!/bin/bash
2
3 VERSION="1.0.0"
4
5 print_help() {
6
echo "Usage: $(basename "$0") [--help | --version] | [[-q|-quiet] [academic_group] file_from_cist.csv]"
7
echo ""
8
echo "Options:"
9
echo " --help
Show this help message"
10
echo " --version
Show version information"
11
echo " -q, --quiet
Suppress output to standard output"
12
echo ""
13
echo "Parameters:"
14
echo " academic_group Academic group name (optional)"
15
echo " file_from_cist Input CSV file from CIST (optional)"
16
echo ""
17
echo "If academic group or input file is not specified, the
script will prompt for selection"
18 }
19
20 print_version() {
21
echo "v$VERSION"
22 }
23
24 quiet=false
25 csv_path=""
26 group_input=""
27
28 while [[ $# -gt 0 ]]; do
29
case "$1" in
30
--help)
31
print_help
32
exit 0
33
;;
34
--version)
35
print_version
36
exit 0
37
;;
38
-q|--quiet)
39
quiet=true
40
shift
41
;;
42
*)
43
if [[ -z "$group_input" ]]; then
44
group_input="$1"

11
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

elif [[ -z "$csv_path" ]]; then
csv_path="$1"
else
echo "
Too many args."
print_help
exit 1
fi
shift
;;

‚õî

esac
done

üîç

if [[ -z "$csv_path" ]]; then
PS3="
Available files: "
select csv_path in TimeTable_*.csv; do
if [[ -n "$csv_path" ]]; then
break
else
echo "
Wrong choice, try again."
fi
done
fi

üö´

available_groups=$(iconv -f windows-1251 -t utf-8 "$csv_path" | \
sed -e 's/\r\n/\n/g' -e 's/\r/\n/g' | sed 's/^\xEF\xBB\xBF//'
| \
70
sed 's/"//g' | awk -F',' 'NR > 1 { split($1, x, " - "); print
x[1] }' | sort -u)
71
72 if [[ -z "$available_groups" ]]; then
73
echo "
No academic groups found in the file."
74
exit 1
75 fi
76
77 if [[ -z "$group_input" ]]; then
78
PS3="
Select group:"
79
select selected_group in $available_groups; do
80
if [[ -n "$selected_group" ]]; then
81
break
82
else
83
echo "
Wrong choice, try again."
84
fi
85
done
86 else
87
selected_group="$group_input"
88 fi
89
90 result_file="Google_${csv_path}"
91 echo "\"Subject\",\"Start Date\",\"Start Time\",\"End Date\",
\"End Time\",\"Description\"" > "$result_file"
92
93 iconv -f windows-1251 -t utf-8 "$csv_path" | \
94
sed -e 's/\r\n/\n/g' -e 's/\r/\n/g' -e 's/^\xEF\xBB\xBF//' |
\
95
awk -v grp="$selected_group" '

‚ùå

üë§

üö´

12
96
97
98
99
100
101
102
103

BEGIN {
FS="\",\""; OFS="|"
}

function generate_key(date, time, d, m, y, h, min) {
split(date, dp, ".")
split(time, tp, ":")
return sprintf("%04d%02d%02d%02d%02d", dp[3], dp[2],
dp[1], tp[1], tp[2])
104
}
105
106
NR > 1 {
107
gsub(/^"/, "", $1)
108
gsub(/"$/, "", $(NF))
109
split($1, parts, " - ")
110
g_name = parts[1]
111
l_type = parts[2]
112
113
if (g_name == grp) {
114
sort_key = generate_key($2, $3)
115
print sort_key, l_type, $2, $3, $4, $5, $12
116
}
117
}' | sort -t'|' -k1,1 | \
118
awk -F'|' '
119
BEGIN { OFS="," }
120
121
function fmt_time(t, h, m, res) {
122
split(t, tt, ":"); h = tt[1]; m = tt[2]
123
res = (h >= 12) ? "PM" : "AM"
124
if (h == 0) h = 12; else if (h > 12) h -= 12
125
return sprintf("%02d:%02d %s", h, m, res)
126
}
127
128
function fmt_date(date_str, parts) {
129
split(date_str, parts, ".")
130
return sprintf("%02d/%02d/%04d", parts[2], parts[1],
parts[3])
131
}
132
133
{
134
type = $2
135
raw_date = $3
136
split(raw_date, dt, ".")
137
identifier = sprintf("%04d%02d%02d", dt[3], dt[2], dt[1])
138
composite_key = type "-" identifier
139
140
if (!(composite_key in seen)) {
141
counter[type]++
142
seen[composite_key] = counter[type]
143
}
144
145
entry_num = seen[composite_key]
146
print "\"" type "; ‚Ññ" entry_num "\"", \
147
"\"" fmt_date($3) "\"", \
148
"\"" fmt_time($4) "\"", \
149
"\"" fmt_date($5) "\"", \

13
150
"\"" fmt_time($6) "\"", \
151
"\"" $7 "\""
152
}' >> "$result_file"
153
154 if ! $quiet; then
155
echo "
Saved to: $result_file"
156 fi

‚úÖ
