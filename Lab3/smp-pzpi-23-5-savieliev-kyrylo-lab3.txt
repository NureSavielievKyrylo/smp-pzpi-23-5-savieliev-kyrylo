МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ

Кафедра Програмної інженерії

Звіт
з лабораторної роботи №3
з дисципліни: «Скриптові мови програмування»
з теми: «Створення Web застосунків за допомогою PHP»

Виконав:

Перевірив:

ст. гр. ПЗПІ-23-5

cт. виклач кафедри ПІ

Cавєльєв К. С.

Сокорчук І. П.

Харків 2025

2
1 ІСТОРІЯ ЗМІН
№ Дата
1 23.05.2025

Версія звіту
0.1

Опис змін та виправлень
Початкова версія

3
2 ЗАВДАННЯ
Розробити робочий інтернет-магазин, що має складатися з таких розділів:
–

Сторінка товарів;

–

Сторінка кошик;

Кожна сторінка має складатися з таких частин:
–

«Шапка» сторінки;

–

Тіло сторінки;

–

«Підвал» сторінки.

На сторінці товарів необхідно відобразити список доступних для покупки
найменувань з можливістю вибрати кількість одиниць товарів і кнопкою «купити».
Під час натискання на кнопку «купити», має відправлятися запит (відправка
форми, методом POST) на сервер, де дані зберігаються в сесію.
На сторінці «Кошик» необхідно відобразити список обраних користувачем
товарів (які були збережені у сесію).
Якщо жодного товару не обрано, то має бути відображений напис «Перейти
до покупок» (посилання).

4
3 ОПИС ВИКОНАНОЇ РОБОТИ
Розроблений веб застосунок є дещо видозміненим варіантом консольного
додатку розробленого в рамках 2-ї лабораторної роботи.
Розпочнемо огляд з вхідного файлу «index.php». Він виконує роль
маршрутизатора та вказує серверу які сторінки відображати в залежності від шляху,
записаного у змінній «path», якщо ж сторінка не знайдена виводиться сторінка 404:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

<?php
require_once 'db/seed.php';
require_once 'db/DbConnection.php';
$path = $_SERVER['PATH_INFO'] ?? '/';
session_start();
seed();
switch ($path) {
case '/':
include 'pages/home.phtml';
break;
case '/products':
include 'pages/products.phtml';
break;
case '/cart':
include 'pages/cart.phtml';;
break;
default:
http_response_code(404);
include 'pages/404.phtml';
break;
}

Також саме тут запускається нова сесія, або відновлюється вже існуюча, за
допомогою вбудованої функції «session_start» та виконується функція «seed», що
заповнює БД (базу даних), якщо вона пуста:
1
2
3
4
5
6
7
8
9
10

<?php
require_once 'db/DbConnection.php';
function seed(): void
{
$connection = DbConnection::getInstance()->getConnection();
$connection->exec("
create table if not exists products (

5
11
id integer primary key autoincrement,
12
name text not null,
13
price integer not null
14
)
15
");
16
17
$stmt = $connection->query("select count(*) from products");
18
$count = (int) $stmt->fetchColumn();
19
20
if ($count == 0) {
21
$connection->exec("
22
insert into products (name, price) values
23
('Молоко пастеризоване', 12),
24
('Хліб чорний', 9),
25
('Сир білий', 21),
26
('Сметана 20%', 25),
27
('Кефір 1%', 19),
28
('Вода газована', 25),
29
('Печиво \"Весна\"', 25);
30
");
31
}
32 }

Додаток використовує базу даних «SQLite» для зберігання даних про товари,
для підключення до бази у програмі створено спеціальний клас «DbConnection», що
реалізує дизайн-паттерн «Singleton»:
1 <?php
2
3 class DbConnection
4 {
5
private static ?DbConnection $instance = null;
6
private PDO $connection;
7
8
private function __construct()
9
{
10
$this->connection = new PDO('sqlite:./db/db.sqlite');
11
$this->connection->setAttribute(PDO::ATTR_ERRMODE,
PDO::ERRMODE_EXCEPTION);;
12
}
13
14
public static function getInstance(): DbConnection
15
{
16
if (self::$instance === null) {
17
self::$instance = new DbConnection();
18
}
19
20
return self::$instance;
21
}
22
23
public function getConnection(): PDO
24
{
25
return $this->connection;

6
26
}
27 }

Для роботи з товарами створено сервіс «ProductsService», що має один метод
для отримання товарів з БД:
1
2
3
4
5
6
7
8
9
10
11

<?php
require_once 'db/DbConnection.php';
class ProductsService
{
private readonly PDO $connection;

public function __construct()
{
$this->connection = DbConnection::getInstance()>getConnection();
12
}
13
14
public function getProducts(): array {
15
$stmt = $this->connection->query("select * from products");
16
17
return $stmt->fetchAll(PDO::FETCH_ASSOC);
18
}
19 }

Для роботи з корзиною створено сервіс «CartService», що імлементує тіж
самі методи, що й клас «Cart» з 2-ї лабораторної роботи, з єдиною різницею, що
тепер для зберігання товарів в корзині використовується користувацька сесія, а не
асоціативний масив:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

<?php
require_once './services/ProductsService.php';
class CartService
{
private ProductsService $productsService;
public function __construct()
{
$this->productsService = new ProductsService();
}
public function getCartItems(): array {
$products = $this->productsService->getProducts();
$cart = [];
foreach ($products as $product) {
if (isset($_SESSION['cart'][$product['id']])) {

7
19
20
21
22
23
24

$item = [
'id' => $product['id'],
'name' => $product['name'],
'price' => $product['price'],
'quantity' => $_SESSION['cart'][$product['id']],
'total' => $product['price'] * $_SESSION['cart']
[$product['id']]
25
];
26
27
$cart[] = $item;
28
}
29
}
30
31
return $cart;
32
}
33
34
public function calculateTotal(): int {
35
$total = 0;
36
foreach ($this->getCartItems() as $item) {
37
38
$total += $item['total'];
39
}
40
41
return $total;
42
}
43
44
public function addItem(array $quantities): void {
45
$isEmpty = true;
46
47
foreach ($quantities as $id => $quantity) {
48
$id = (int) $id;
49
$quantity = max(0, min(100, (int) $quantity));
50
51
if ($quantity > 0) {
52
$_SESSION['cart'][$id] = $quantity;
53
$isEmpty = false;
54
}
55
}
56
57
if (!$isEmpty) {
58
header("Location: " . "/cart");
59
}
60
}
61
62
public function removeItem(int $id): void {
63
unset($_SESSION['cart'][$id]);
64
header("Location: " . $_SERVER['REQUEST_URI']);
65
}
66
67
public function clearCart(): void {
68
unset($_SESSION['cart']);
69
header("Location: " . "/");
70
}
71 }

8
Говорячи про шаблонізацію, аби уникнути повторенню коду були створені
шаблони для «шапки» та «підвалу» сторінки, що перевикористовуються на всіх
сторінках додатку.

9
4 ВИСНОВКИ
Під час виконання лабораторної роботи, я навчився розробляти базові веб
застосунки застосовуючи PHP, HTML та CSS.

10
ДОДАТОК А
Відеозапис
Відеозапис презентації результатів https://youtu.be/i5ZfjURV8EU
Хронологічний опис відеозапису:
00:00 — Представлення
01:42 — Розбір компонентів застосунку
09:33 — Демонстрація роботи програми

11
ДОДАТОК Б
Графічні матеріали

Рисунок 2.1 – Головна сторінка

Рисунок 2.2 – Сторінка продуктів

12

Рисунок 2.3 – Пустий кошик

Рисунок 2.4 – Наповнений кошик

13
ДОДАТОК В
Програмний код
В.1 Зміст файлу «index.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

<?php
require_once 'db/seed.php';
require_once 'db/DbConnection.php';
$path = $_SERVER['PATH_INFO'] ?? '/';
session_start();
seed();
switch ($path) {
case '/':
include 'pages/home.phtml';
break;
case '/products':
include 'pages/products.phtml';
break;
case '/cart':
include 'pages/cart.phtml';;
break;
default:
http_response_code(404);
include 'pages/404.phtml';
break;
}

В.2 Зміст файлу «db/DbConnection.php»
Github репозиторій
1 <?php
2
3 class DbConnection
4 {
5
private static ?DbConnection $instance = null;
6
private PDO $connection;
7
8
private function __construct()
9
{
10
$this->connection = new PDO('sqlite:./db/db.sqlite');
11
$this->connection->setAttribute(PDO::ATTR_ERRMODE,
PDO::ERRMODE_EXCEPTION);;

14
12
}
13
public static function getInstance(): DbConnection
14
15
{
16
if (self::$instance === null) {
17
self::$instance = new DbConnection();
18
}
19
20
return self::$instance;
21
}
22
23
public function getConnection(): PDO
24
{
25
return $this->connection;
26
}
27 }

В.3 Зміст файлу «db/seed.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

<?php
require_once 'db/DbConnection.php';
function seed(): void
{
$connection = DbConnection::getInstance()->getConnection();
$connection->exec("
create table if not exists products (
id integer primary key autoincrement,
name text not null,
price integer not null
)
");
$stmt = $connection->query("select count(*) from products");
$count = (int) $stmt->fetchColumn();
if ($count == 0) {
$connection->exec("
insert into products (name, price) values
('Молоко пастеризоване', 12),
('Хліб чорний', 9),
('Сир білий', 21),
('Сметана 20%', 25),
('Кефір 1%', 19),
('Вода газована', 25),
('Печиво \"Весна\"', 25);
");
}
}

15
В.4 Зміст файлу «templates/404.phtml»
Github репозиторій
1
2
3
4
5

6
7
8
9
10
11
12
13
14
15

16
17
18
19

<!doctype html>
<html lang="§">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Сторінка не знайдена | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>
<body>
<main class="flex flex-col items-center justify-center h-dvh wfull gap-5">
<h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight
lg:text-5xl">404</h1>
<h3 class="scroll-m-20 text-2xl font-semibold trackingtight">Сторінка не знайдена</h3>
<div class="inline-flex gap-4">
<a href="/" class="flex bg-indigo-500 text-white itemscenter justify-center h-9 px-3 min-w-[128px] rounded-lg text-sm
hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ringoffset-2 focus:ring-indigo-500">На головну</a>
</div>
</main>
</body>
</html>

В.5 Зміст файлу «templates/cart.phtml»
Github репозиторій
1
2
3
4
5
6
7
8
9

<?php
require_once "./services/CartService.php";
$cartService = new CartService();
$cartItems = $cartService->getCartItems();
$total = $cartService->calculateTotal();

if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST["id"]))
{
10
$cartService->removeItem($_POST["id"]);
11 }

16
12
13 if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST["resetcart"])) {
14
$cartService->clearCart();
15 }
16 ?>
17 <!doctype html>
18 <html lang="en">
19 <head>
20
<meta charset="UTF-8">
21
<meta name="viewport"
22
content="width=device-width, user-scalable=no, initialscale=1.0, maximum-scale=1.0, minimum-scale=1.0">
23
<meta http-equiv="X-UA-Compatible" content="ie=edge">
24
<title>Корзина | Інтернет-магазин "Весна"</title>
25
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/
browser@4"></script>
26 </head>
27 <body class="flex flex-col w-full h-dvh mt-auto">
28
<?php include "./templates/navbar.phtml"; ?>
29
<main class="flex flex-col h-full w-fit mx-auto items-center
justify-center gap-4">
30
<?php if (empty($cartItems)) : ?>
31
<a href="/products" class="text-lg font-semibold textindigo-500 underline decoration-2">Перейти до покупок</a>
32
<?php else : ?>
33
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight mx-auto">Корзина</h1>
34
<table class="w-full text-sm text-left rtl:text-right
text-gray-500">
35
<thead class="text-xs text-gray-700 uppercase bggray-100">
36
<tr>
37
<th scope="col" class="px-6 py-3">Назва</th>
38
<th scope="col" class="px-6 py-3">Ціна</th>
39
<th scope="col" class="px-6 py-3">Кількість</th>
40
<th scope="col" class="px-6 py-3">Сума</th>
41
<th scope="col" class="px-6 py-3">Дії</th>
42
</tr>
43
</thead>
44
<tbody>
45
<?php foreach ($cartItems as $item) : ?>
46
<tr class="bg-white border-b border-gray-200">
47
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap"><?= $item['name'] ?></th>
48
<th class="px-6 py-4"><?= $item['price'] ?></th>
49
<th class="px-6 py-4"><?= $item['quantity'] ?></
th>
50
<th class="px-6 py-4"><?= $item['total'] ?></th>
51
<th class="px-6 py-4">
52
<form action="" method="post">
53
<input type="hidden" name="id" value="<?=
$item['id'] ?>">

17
54

55

56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

73

74
75
76
77
78
79

<button class="flex items-center justifycenter size-9 rounded-lg text-white bg-red-500 hover:bg-red-600
focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ringred-500">
<svg xmlns="http://www.w3.org/2000/svg"
class="size-4" viewBox="0 0 24 24"><path fill="none"
stroke="currentColor" stroke-linecap="round" strokelinejoin="round" stroke-width="2" d="M3 6h18m-2 0v14c0 1-1 2-2
2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2m-6
5v6m4-6v6"/></svg>
</button>
</form>
</th>
</tr>
<?php endforeach; ?>
<tr class="bg-white border-b border-gray-200">
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap">Всього:</th>
<th class="px-6 py-4"></th>
<th class="px-6 py-4"></th>
<th class="px-6 py-4"><?= $total ?></th>
<th class="px-6 py-4"></th>
</tr>
</tbody>
</table>
<form class="w-full text-right space-x-2" action=""
method="post">
<input type="hidden" name="reset-cart">
<button class="bg-red-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-red-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-red-500">Відмінити</
button>
<button class="bg-indigo-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-indigo-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Купити</
button>
</form>
<?php endif; ?>
</main>
<?php include "./templates/footer.phtml"; ?>
</body>
</html>

В.6 Зміст файлу «templates/home.phtml»
Github репозиторій
1
2

<!doctype html>
<html lang="en">

18
3
4
5

6
7
8
9
10
11
12
13
14
15
16
17

<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Головна | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>
<body class="flex flex-col w-full h-dvh mt-auto">
<?php include './templates/navbar.phtml'; ?>
<main class="flex size-full items-center justify-center bgslate-50">
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight">Інтернет-магазин "Весна"</h1>
</main>
<?php include './templates/footer.phtml'; ?>
</body>
</html>

В.7 Зміст файлу «templates/products.phtml»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

19
20
21
22

<?php
require_once './services/ProductsService.php';
require_once './services/CartService.php';
$productsService = new ProductsService();
$cartService = new CartService();
$products = $productsService->getProducts();
if ($_SERVER["REQUEST_METHOD"] == "POST" &&
isset($_POST['quantities'])) {
$cartService->addItem($_POST['quantities']);
}
?>
<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, userscalable=no, initial-scale=1.0, maximum-scale=1.0, minimumscale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Продукти | Інтернет-магазин "Весна"</title>
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@
4"></script>
</head>

19
23 <body class="flex flex-col w-full h-dvh mt-auto">
24
<?php include './templates/navbar.phtml'; ?>
<main class="flex flex-col size-full bg-slate-50 items-center
25
justify-center gap-6">
26
<h1 class="scroll-m-20 text-2xl font-semibold trackingtight">Продукти</h1>
27
<form class="flex flex-col items-center justify-center gap-4"
action="" method="post">
28
<table class="w-full text-sm text-left rtl:text-right textgray-500">
29
<thead class="text-xs text-gray-700 uppercase bggray-100">
30
<tr>
31
<th scope="col" class="px-6 py-3">Назва</th>
32
<th scope="col" class="px-6 py-3">Кількість</th>
33
<th scope="col" class="px-6 py-3">Ціна</th>
34
</tr>
35
</thead>
36
<tbody>
37
<?php foreach ($products as $product) : ?>
38
<tr class="bg-white border-b border-gray-200">
39
<th scope="row" class="px-6 py-4 font-medium textgray-900 whitespace-nowrap"><?= $product['name'] ?></th>
40
<th class="px-6 py-4">
41
<input
42
name="quantities[<?php echo $product['id']; ?>]"
43
class="border border-slate-300 w-16 pl-2
focus:border-indigo-500 rounded-md"
44
type="number"
45
value="0"
46
min="0"
47
max="100"
48
step="1"
49
/>
50
</th>
51
<th class="px-6 py-4">$<?= $product['price'] ?></th>
52
</tr>
53
<?php endforeach; ?>
54
</tbody>
55
</table>
56
<button class="bg-indigo-500 text-white h-9 px-3 min-w[128px] rounded-lg text-sm hover:bg-indigo-600 focus:outline-none
focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mlauto">Підтвердити</button>
57
</form>
58
</main>
59
<?php include './templates/footer.phtml'; ?>
60 </body>
61 </html>

20
В.8 Зміст файлу «services/CartService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

<?php
require_once './services/ProductsService.php';
class CartService
{
private ProductsService $productsService;
public function __construct()
{
$this->productsService = new ProductsService();
}
public function getCartItems(): array {
$products = $this->productsService->getProducts();
$cart = [];

foreach ($products as $product) {
if (isset($_SESSION['cart'][$product['id']])) {
$item = [
'id' => $product['id'],
'name' => $product['name'],
'price' => $product['price'],
'quantity' => $_SESSION['cart'][$product['id']],
'total' => $product['price'] * $_SESSION['cart']
[$product['id']]
25
];
26
27
$cart[] = $item;
28
}
29
}
30
31
return $cart;
32
}
33
34
public function calculateTotal(): int {
35
$total = 0;
36
37
foreach ($this->getCartItems() as $item) {
38
$total += $item['total'];
39
}
40
41
return $total;
42
}
43
44
public function addItem(array $quantities): void {
45
$isEmpty = true;
46
47
foreach ($quantities as $id => $quantity) {
48
$id = (int) $id;
49
$quantity = max(0, min(100, (int) $quantity));

21
50
51
if ($quantity > 0) {
$_SESSION['cart'][$id] = $quantity;
52
53
$isEmpty = false;
54
}
55
}
56
57
if (!$isEmpty) {
58
header("Location: " . "/cart");
59
}
60
}
61
62
public function removeItem(int $id): void {
63
unset($_SESSION['cart'][$id]);
64
header("Location: " . $_SERVER['REQUEST_URI']);
65
}
66
67
public function clearCart(): void {
68
unset($_SESSION['cart']);
69
header("Location: " . "/");
70
}
71 }

В.9 Зміст файлу «services/ProductsService.php»
Github репозиторій
1
2
3
4
5
6
7
8
9
10
11

<?php
require_once 'db/DbConnection.php';
class ProductsService
{
private readonly PDO $connection;

public function __construct()
{
$this->connection = DbConnection::getInstance()>getConnection();
12
}
13
14
public function getProducts(): array {
15
$stmt = $this->connection->query("select * from products");
16
17
return $stmt->fetchAll(PDO::FETCH_ASSOC);
18
}
19 }
